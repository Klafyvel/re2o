# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-12-30 15:27
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('machines', '0001_model_creation'),
    ]
    

    operations = [
        migrations.AddField(
            model_name='dname',
            name='zone',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='machines.Extension'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='domain',
            name='extension',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='machines.Extension'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='domain',
            name='interface_parent',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='machines.Interface'),
        ),
        migrations.AddField(
            model_name='extension',
            name='origin',
            field=models.ForeignKey(blank=True, help_text='A record associated with the zone.', null=True, on_delete=django.db.models.deletion.PROTECT, to='machines.IpList'),
        ),
        migrations.AddField(
            model_name='extension',
            name='soa',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='machines.SOA'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='interface',
            name='ipv4',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='machines.IpList'),
        ),
        migrations.AddField(
            model_name='interface',
            name='machine',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='machines.Machine'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='interface',
            name='machine_type',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='machines.MachineType'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='interface',
            name='port_lists',
            field=models.ManyToManyField(blank=True, to='machines.OuverturePortList'),
        ),
        migrations.AddField(
            model_name='iplist',
            name='ip_type',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='machines.IpType'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='iptype',
            name='extension',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='machines.Extension'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='iptype',
            name='ouverture_ports',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='machines.OuverturePortList'),
        ),
        migrations.AddField(
            model_name='iptype',
            name='vlan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='machines.Vlan'),
        ),
        migrations.AddField(
            model_name='ipv6list',
            name='interface',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='ipv6list', to='machines.Interface'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='machine',
            name='user',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='machinetype',
            name='ip_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='machines.IpType'),
        ),
        migrations.AddField(
            model_name='mx',
            name='name',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='machines.Domain'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='mx',
            name='zone',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='machines.Extension'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='nas',
            name='machine_type',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='machinetype_on_nas', to='machines.MachineType'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='nas',
            name='nas_type',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='nas_type', to='machines.MachineType'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='ns',
            name='ns',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='machines.Domain'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='ns',
            name='zone',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='machines.Extension'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='ouvertureport',
            name='port_list',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='machines.OuverturePortList'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='role',
            name='servers',
            field=models.ManyToManyField(to='machines.Interface'),
        ),
        migrations.AddField(
            model_name='service',
            name='servers',
            field=models.ManyToManyField(through='machines.Service_link', to='machines.Interface'),
        ),
        migrations.AddField(
            model_name='service_link',
            name='server',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='machines.Interface'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service_link',
            name='service',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='machines.Service'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='srv',
            name='extension',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='machines.Extension'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='srv',
            name='target',
            field=models.ForeignKey(default=None, help_text='Target server.', on_delete=django.db.models.deletion.PROTECT, to='machines.Domain'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='sshfp',
            name='machine',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='machines.Machine'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='txt',
            name='zone',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='machines.Extension'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='domain',
            unique_together=set([('name', 'extension')]),
        ),
    ]
