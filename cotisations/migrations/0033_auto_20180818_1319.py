# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2018-08-18 11:19
from __future__ import unicode_literals

import cotisations.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re2o.aes_field


class Migration(migrations.Migration):

    dependencies = [("cotisations", "0032_custom_invoice")]

    operations = [
        migrations.AlterModelOptions(
            name="article",
            options={
                "permissions": (
                    ("view_article", "Can view an article object"),
                    ("buy_every_article", "Can buy every article"),
                ),
                "verbose_name": "article",
                "verbose_name_plural": "articles",
            },
        ),
        migrations.AlterModelOptions(
            name="balancepayment", options={"verbose_name": "user balance"}
        ),
        migrations.AlterModelOptions(
            name="banque",
            options={
                "permissions": (("view_banque", "Can view a bank object"),),
                "verbose_name": "bank",
                "verbose_name_plural": "banks",
            },
        ),
        migrations.AlterModelOptions(
            name="cotisation",
            options={
                "permissions": (
                    ("view_cotisation", "Can view a subscription object"),
                    ("change_all_cotisation", "Can edit the previous subscriptions"),
                ),
                "verbose_name": "subscription",
                "verbose_name_plural": "subscriptions",
            },
        ),
        migrations.AlterModelOptions(
            name="custominvoice",
            options={
                "permissions": (
                    ("view_custominvoice", "Can view a custom invoice object"),
                )
            },
        ),
        migrations.AlterModelOptions(
            name="facture",
            options={
                "permissions": (
                    ("change_facture_control", 'Can edit the "controlled" state'),
                    ("view_facture", "Can view an invoice object"),
                    ("change_all_facture", "Can edit all the previous invoices"),
                ),
                "verbose_name": "invoice",
                "verbose_name_plural": "invoices",
            },
        ),
        migrations.AlterModelOptions(
            name="paiement",
            options={
                "permissions": (
                    ("view_paiement", "Can view a payment method object"),
                    ("use_every_payment", "Can use every payment method"),
                ),
                "verbose_name": "payment method",
                "verbose_name_plural": "payment methods",
            },
        ),
        migrations.AlterModelOptions(
            name="vente",
            options={
                "permissions": (
                    ("view_vente", "Can view a purchase object"),
                    ("change_all_vente", "Can edit all the previous purchases"),
                ),
                "verbose_name": "purchase",
                "verbose_name_plural": "purchases",
            },
        ),
        migrations.AlterField(
            model_name="article",
            name="available_for_everyone",
            field=models.BooleanField(
                default=False, verbose_name="is available for every user"
            ),
        ),
        migrations.AlterField(
            model_name="article",
            name="duration",
            field=models.PositiveIntegerField(
                blank=True,
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
                verbose_name="duration (in months)",
            ),
        ),
        migrations.AlterField(
            model_name="article",
            name="name",
            field=models.CharField(max_length=255, verbose_name="designation"),
        ),
        migrations.AlterField(
            model_name="article",
            name="prix",
            field=models.DecimalField(
                decimal_places=2, max_digits=5, verbose_name="unit price"
            ),
        ),
        migrations.AlterField(
            model_name="article",
            name="type_cotisation",
            field=models.CharField(
                blank=True,
                choices=[
                    ("Connexion", "Connection"),
                    ("Adhesion", "Membership"),
                    ("All", "Both of them"),
                ],
                default=None,
                max_length=255,
                null=True,
                verbose_name="subscription type",
            ),
        ),
        migrations.AlterField(
            model_name="article",
            name="type_user",
            field=models.CharField(
                choices=[
                    ("Adherent", "Member"),
                    ("Club", "Club"),
                    ("All", "Both of them"),
                ],
                default="All",
                max_length=255,
                verbose_name="type of users concerned",
            ),
        ),
        migrations.AlterField(
            model_name="banque", name="name", field=models.CharField(max_length=255)
        ),
        migrations.AlterField(
            model_name="comnpaypayment",
            name="payment_credential",
            field=models.CharField(
                blank=True,
                default="",
                max_length=255,
                verbose_name="ComNpay VAT Number",
            ),
        ),
        migrations.AlterField(
            model_name="comnpaypayment",
            name="payment_pass",
            field=re2o.aes_field.AESEncryptedField(
                blank=True, max_length=255, null=True, verbose_name="ComNpay secret key"
            ),
        ),
        migrations.AlterField(
            model_name="comnpaypayment",
            name="production",
            field=models.BooleanField(
                default=True,
                verbose_name="Production mode enabled (production URL, instead of homologation)",
            ),
        ),
        migrations.AlterField(
            model_name="cotisation",
            name="date_end",
            field=models.DateTimeField(verbose_name="end date"),
        ),
        migrations.AlterField(
            model_name="cotisation",
            name="date_start",
            field=models.DateTimeField(verbose_name="start date"),
        ),
        migrations.AlterField(
            model_name="cotisation",
            name="type_cotisation",
            field=models.CharField(
                choices=[
                    ("Connexion", "Connection"),
                    ("Adhesion", "Membership"),
                    ("All", "Both of them"),
                ],
                default="All",
                max_length=255,
                verbose_name="subscription type",
            ),
        ),
        migrations.AlterField(
            model_name="cotisation",
            name="vente",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="cotisations.Vente",
                verbose_name="purchase",
            ),
        ),
        migrations.AlterField(
            model_name="facture",
            name="cheque",
            field=models.CharField(
                blank=True, max_length=255, verbose_name="cheque number"
            ),
        ),
        migrations.AlterField(
            model_name="facture",
            name="control",
            field=models.BooleanField(default=False, verbose_name="controlled"),
        ),
        migrations.AlterField(
            model_name="facture",
            name="valid",
            field=models.BooleanField(default=True, verbose_name="validated"),
        ),
        migrations.AlterField(
            model_name="paiement",
            name="available_for_everyone",
            field=models.BooleanField(
                default=False, verbose_name="is available for every user"
            ),
        ),
        migrations.AlterField(
            model_name="paiement",
            name="is_balance",
            field=models.BooleanField(
                default=False,
                editable=False,
                help_text="There should be only one balance payment method.",
                validators=[cotisations.validators.check_no_balance],
                verbose_name="is user balance",
            ),
        ),
        migrations.AlterField(
            model_name="paiement",
            name="moyen",
            field=models.CharField(max_length=255, verbose_name="method"),
        ),
        migrations.AlterField(
            model_name="vente",
            name="duration",
            field=models.PositiveIntegerField(
                blank=True, null=True, verbose_name="duration (in months)"
            ),
        ),
        migrations.AlterField(
            model_name="vente",
            name="facture",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="cotisations.BaseInvoice",
                verbose_name="invoice",
            ),
        ),
        migrations.AlterField(
            model_name="vente",
            name="name",
            field=models.CharField(max_length=255, verbose_name="article"),
        ),
        migrations.AlterField(
            model_name="vente",
            name="number",
            field=models.IntegerField(
                validators=[django.core.validators.MinValueValidator(1)],
                verbose_name="amount",
            ),
        ),
        migrations.AlterField(
            model_name="vente",
            name="prix",
            field=models.DecimalField(
                decimal_places=2, max_digits=5, verbose_name="price"
            ),
        ),
        migrations.AlterField(
            model_name="vente",
            name="type_cotisation",
            field=models.CharField(
                blank=True,
                choices=[
                    ("Connexion", "Connection"),
                    ("Adhesion", "Membership"),
                    ("All", "Both of them"),
                ],
                max_length=255,
                null=True,
                verbose_name="subscription type",
            ),
        ),
    ]
