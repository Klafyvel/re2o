# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2019-01-08 22:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import re2o.aes_field


class Migration(migrations.Migration):

    dependencies = [("preferences", "0057_optionaluser_all_users_active")]

    operations = [
        migrations.AlterModelOptions(
            name="radiuskey",
            options={
                "permissions": (("view_radiuskey", "Can view a RADIUS key object"),),
                "verbose_name": "RADIUS key",
                "verbose_name_plural": "RADIUS keys",
            },
        ),
        migrations.AlterModelOptions(
            name="radiusoption",
            options={
                "verbose_name": "RADIUS policy",
                "verbose_name_plural": "RADIUS policies",
            },
        ),
        migrations.AlterModelOptions(
            name="reminder",
            options={
                "permissions": (("view_reminder", "Can view a reminder object"),),
                "verbose_name": "reminder",
                "verbose_name_plural": "reminders",
            },
        ),
        migrations.AlterModelOptions(
            name="switchmanagementcred",
            options={
                "permissions": (
                    (
                        "view_switchmanagementcred",
                        "Can view a switch management credentials object",
                    ),
                ),
                "verbose_name": "switch management credentials",
            },
        ),
        migrations.AlterField(
            model_name="mailmessageoption",
            name="welcome_mail_en",
            field=models.TextField(default="", help_text="Welcome email in English"),
        ),
        migrations.AlterField(
            model_name="mailmessageoption",
            name="welcome_mail_fr",
            field=models.TextField(default="", help_text="Welcome email in French"),
        ),
        migrations.AlterField(
            model_name="optionaltopologie",
            name="sftp_login",
            field=models.CharField(
                blank=True,
                help_text="SFTP login for switches",
                max_length=32,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="optionaltopologie",
            name="sftp_pass",
            field=re2o.aes_field.AESEncryptedField(
                blank=True, help_text="SFTP password", max_length=63, null=True
            ),
        ),
        migrations.AlterField(
            model_name="optionaltopologie",
            name="switchs_ip_type",
            field=models.OneToOneField(
                blank=True,
                help_text="IP range for the management of switches",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="machines.IpType",
            ),
        ),
        migrations.AlterField(
            model_name="optionaltopologie",
            name="switchs_provision",
            field=models.CharField(
                choices=[("sftp", "sftp"), ("tftp", "tftp")],
                default="tftp",
                help_text="Provision of configuration mode for switches",
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name="optionaltopologie",
            name="switchs_rest_management",
            field=models.BooleanField(
                default=False,
                help_text="REST management, activated in case of automatic provision",
            ),
        ),
        migrations.AlterField(
            model_name="optionaltopologie",
            name="switchs_web_management",
            field=models.BooleanField(
                default=False,
                help_text="Web management, activated in case of automatic provision",
            ),
        ),
        migrations.AlterField(
            model_name="optionaltopologie",
            name="switchs_web_management_ssl",
            field=models.BooleanField(
                default=False,
                help_text="SSL web management, make sure that a certificate is installed on the switch",
            ),
        ),
        migrations.AlterField(
            model_name="optionaluser",
            name="all_can_create_adherent",
            field=models.BooleanField(
                default=False, help_text="Users can create a member."
            ),
        ),
        migrations.AlterField(
            model_name="optionaluser",
            name="all_can_create_club",
            field=models.BooleanField(
                default=False, help_text="Users can create a club."
            ),
        ),
        migrations.AlterField(
            model_name="optionaluser",
            name="all_users_active",
            field=models.BooleanField(
                default=False,
                help_text="If True, all new created and connected users are active. If False, only when a valid registration has been paid.",
            ),
        ),
        migrations.AlterField(
            model_name="optionaluser",
            name="delete_notyetactive",
            field=models.IntegerField(
                default=15,
                help_text="Not yet active users will be deleted after this number of days.",
            ),
        ),
        migrations.AlterField(
            model_name="optionaluser",
            name="local_email_accounts_enabled",
            field=models.BooleanField(
                default=False, help_text="Enable local email accounts for users."
            ),
        ),
        migrations.AlterField(
            model_name="optionaluser",
            name="max_email_address",
            field=models.IntegerField(
                default=15,
                help_text="Maximum number of local email addresses for a standard user.",
            ),
        ),
        migrations.AlterField(
            model_name="optionaluser",
            name="self_adhesion",
            field=models.BooleanField(
                default=False, help_text="A new user can create their account on Re2o."
            ),
        ),
        migrations.AlterField(
            model_name="optionaluser",
            name="self_change_room",
            field=models.BooleanField(
                default=False, help_text="Users can edit their room."
            ),
        ),
        migrations.AlterField(
            model_name="optionaluser",
            name="self_change_shell",
            field=models.BooleanField(
                default=False, help_text="Users can edit their shell."
            ),
        ),
        migrations.AlterField(
            model_name="radiuskey",
            name="comment",
            field=models.CharField(
                blank=True, help_text="Comment for this key", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="radiuskey",
            name="default_switch",
            field=models.BooleanField(
                default=True, help_text="Default key for switches", unique=True
            ),
        ),
        migrations.AlterField(
            model_name="radiuskey",
            name="radius_key",
            field=re2o.aes_field.AESEncryptedField(
                help_text="RADIUS key", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="radiusoption",
            name="banned",
            field=models.CharField(
                choices=[
                    ("REJECT", "Reject the machine"),
                    ("SET_VLAN", "Place the machine on the VLAN"),
                ],
                default="REJECT",
                max_length=32,
                verbose_name="Policy for banned users",
            ),
        ),
        migrations.AlterField(
            model_name="radiusoption",
            name="banned_vlan",
            field=models.ForeignKey(
                blank=True,
                help_text="VLAN for banned users if not rejected",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="banned_vlan",
                to="machines.Vlan",
                verbose_name="Banned users VLAN",
            ),
        ),
        migrations.AlterField(
            model_name="radiusoption",
            name="non_member",
            field=models.CharField(
                choices=[
                    ("REJECT", "Reject the machine"),
                    ("SET_VLAN", "Place the machine on the VLAN"),
                ],
                default="REJECT",
                max_length=32,
                verbose_name="Policy for non members",
            ),
        ),
        migrations.AlterField(
            model_name="radiusoption",
            name="non_member_vlan",
            field=models.ForeignKey(
                blank=True,
                help_text="VLAN for non members if not rejected",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="non_member_vlan",
                to="machines.Vlan",
                verbose_name="Non members VLAN",
            ),
        ),
        migrations.AlterField(
            model_name="radiusoption",
            name="unknown_machine_vlan",
            field=models.ForeignKey(
                blank=True,
                help_text="VLAN for unknown machines if not rejected",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="unknown_machine_vlan",
                to="machines.Vlan",
                verbose_name="Unknown machines VLAN",
            ),
        ),
        migrations.AlterField(
            model_name="radiusoption",
            name="unknown_port",
            field=models.CharField(
                choices=[
                    ("REJECT", "Reject the machine"),
                    ("SET_VLAN", "Place the machine on the VLAN"),
                ],
                default="REJECT",
                max_length=32,
                verbose_name="Policy for unknown ports",
            ),
        ),
        migrations.AlterField(
            model_name="radiusoption",
            name="unknown_port_vlan",
            field=models.ForeignKey(
                blank=True,
                help_text="VLAN for unknown ports if not rejected",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="unknown_port_vlan",
                to="machines.Vlan",
                verbose_name="Unknown ports VLAN",
            ),
        ),
        migrations.AlterField(
            model_name="radiusoption",
            name="unknown_room",
            field=models.CharField(
                choices=[
                    ("REJECT", "Reject the machine"),
                    ("SET_VLAN", "Place the machine on the VLAN"),
                ],
                default="REJECT",
                max_length=32,
                verbose_name="Policy for machines connecting from unregistered rooms (relevant on ports with STRICT RADIUS mode)",
            ),
        ),
        migrations.AlterField(
            model_name="radiusoption",
            name="unknown_room_vlan",
            field=models.ForeignKey(
                blank=True,
                help_text="VLAN for unknown rooms if not rejected",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="unknown_room_vlan",
                to="machines.Vlan",
                verbose_name="Unknown rooms VLAN",
            ),
        ),
        migrations.AlterField(
            model_name="reminder",
            name="days",
            field=models.IntegerField(
                default=7,
                help_text="Delay between the email and the membership's end",
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="reminder",
            name="message",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Message displayed specifically for this reminder",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="switchmanagementcred",
            name="default_switch",
            field=models.BooleanField(
                default=True, help_text="Default credentials for switches", unique=True
            ),
        ),
        migrations.AlterField(
            model_name="switchmanagementcred",
            name="management_id",
            field=models.CharField(help_text="Switch login", max_length=63),
        ),
        migrations.AlterField(
            model_name="switchmanagementcred",
            name="management_pass",
            field=re2o.aes_field.AESEncryptedField(help_text="Password", max_length=63),
        ),
    ]
