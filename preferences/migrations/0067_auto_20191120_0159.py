# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-11-20 00:59
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import preferences.models
import re2o.aes_field


class Migration(migrations.Migration):

    dependencies = [
        ('preferences', '0066_optionalmachine_default_dns_ttl'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='assooption',
            options={'permissions': (('view_assooption', 'Can view the organisation preferences'),), 'verbose_name': 'organisation preferences'},
        ),
        migrations.AlterModelOptions(
            name='cotisationsoption',
            options={'verbose_name': 'subscription preferences'},
        ),
        migrations.AlterModelOptions(
            name='generaloption',
            options={'permissions': (('view_generaloption', 'Can view the general preferences'),), 'verbose_name': 'general preferences'},
        ),
        migrations.AlterModelOptions(
            name='homeoption',
            options={'permissions': (('view_homeoption', 'Can view the homepage preferences'),), 'verbose_name': 'homepage preferences'},
        ),
        migrations.AlterModelOptions(
            name='mailmessageoption',
            options={'permissions': (('view_mailmessageoption', 'Can view the email message preferences'),), 'verbose_name': 'email message preferences'},
        ),
        migrations.AlterModelOptions(
            name='mandate',
            options={'permissions': (('view_mandate', 'Can view a mandate object'),), 'verbose_name': 'mandate', 'verbose_name_plural': 'mandates'},
        ),
        migrations.AlterModelOptions(
            name='optionalmachine',
            options={'permissions': (('view_optionalmachine', 'Can view the machine preferences'),), 'verbose_name': 'machine preferences'},
        ),
        migrations.AlterModelOptions(
            name='optionaltopologie',
            options={'permissions': (('view_optionaltopologie', 'Can view the topology preferences'),), 'verbose_name': 'topology preferences'},
        ),
        migrations.AlterModelOptions(
            name='optionaluser',
            options={'permissions': (('view_optionaluser', 'Can view the user preferences'),), 'verbose_name': 'user preferences'},
        ),
        migrations.AlterModelOptions(
            name='service',
            options={'permissions': (('view_service', 'Can view the service preferences'),), 'verbose_name': 'service', 'verbose_name_plural': 'services'},
        ),
        migrations.AlterField(
            model_name='cotisationsoption',
            name='invoice_template',
            field=models.OneToOneField(default=preferences.models.default_invoice, on_delete=django.db.models.deletion.PROTECT, related_name='invoice_template', to='preferences.DocumentTemplate', verbose_name='template for invoices'),
        ),
        migrations.AlterField(
            model_name='cotisationsoption',
            name='send_voucher_mail',
            field=models.BooleanField(default=False, help_text='Be careful, if no mandate is defined on the preferences page, errors will be triggered when generating vouchers.', verbose_name='send voucher by email when the invoice is controlled'),
        ),
        migrations.AlterField(
            model_name='cotisationsoption',
            name='voucher_template',
            field=models.OneToOneField(default=preferences.models.default_voucher, on_delete=django.db.models.deletion.PROTECT, related_name='voucher_template', to='preferences.DocumentTemplate', verbose_name='template for subscription vouchers'),
        ),
        migrations.AlterField(
            model_name='generaloption',
            name='general_message_en',
            field=models.TextField(blank=True, default='', help_text='General message displayed on the English version of the website (e.g. in case of maintenance).'),
        ),
        migrations.AlterField(
            model_name='generaloption',
            name='general_message_fr',
            field=models.TextField(blank=True, default='', help_text='General message displayed on the French version of the website (e.g. in case of maintenance).'),
        ),
        migrations.AlterField(
            model_name='mailcontact',
            name='address',
            field=models.EmailField(default='contact@example.org', help_text='Contact email address.', max_length=254),
        ),
        migrations.AlterField(
            model_name='mailmessageoption',
            name='welcome_mail_en',
            field=models.TextField(blank=True, default='', help_text='Welcome email in English.'),
        ),
        migrations.AlterField(
            model_name='mailmessageoption',
            name='welcome_mail_fr',
            field=models.TextField(blank=True, default='', help_text='Welcome email in French.'),
        ),
        migrations.AlterField(
            model_name='mandate',
            name='president',
            field=models.ForeignKey(blank=True, help_text='Displayed on subscription vouchers.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='president of the association'),
        ),
        migrations.AlterField(
            model_name='optionalmachine',
            name='default_dns_ttl',
            field=models.PositiveIntegerField(default=172800, verbose_name='default Time To Live (TTL) for CNAME, A and AAAA records'),
        ),
        migrations.AlterField(
            model_name='optionalmachine',
            name='ipv6_mode',
            field=models.CharField(choices=[('SLAAC', 'Automatic configuration by RA'), ('DHCPV6', 'IP addresses assignment by DHCPv6'), ('DISABLED', 'Disabled')], default='DISABLED', max_length=32),
        ),
        migrations.AlterField(
            model_name='optionaltopologie',
            name='sftp_login',
            field=models.CharField(blank=True, help_text='SFTP login for switches.', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='optionaltopologie',
            name='sftp_pass',
            field=re2o.aes_field.AESEncryptedField(blank=True, help_text='SFTP password.', max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='optionaltopologie',
            name='switchs_ip_type',
            field=models.OneToOneField(blank=True, help_text='IP range for the management of switches.', null=True, on_delete=django.db.models.deletion.PROTECT, to='machines.IpType'),
        ),
        migrations.AlterField(
            model_name='optionaltopologie',
            name='switchs_provision',
            field=models.CharField(choices=[('sftp', 'SFTP'), ('tftp', 'TFTP')], default='tftp', help_text='Provision of configuration mode for switches.', max_length=32),
        ),
        migrations.AlterField(
            model_name='optionaltopologie',
            name='switchs_rest_management',
            field=models.BooleanField(default=False, help_text='REST management, activated in case of automatic provision.'),
        ),
        migrations.AlterField(
            model_name='optionaltopologie',
            name='switchs_web_management',
            field=models.BooleanField(default=False, help_text='Web management, activated in case of automatic provision.'),
        ),
        migrations.AlterField(
            model_name='optionaltopologie',
            name='switchs_web_management_ssl',
            field=models.BooleanField(default=False, help_text='SSL web management, make sure that a certificate is installed on the switch.'),
        ),
        migrations.AlterField(
            model_name='optionaluser',
            name='local_email_domain',
            field=models.CharField(default='@example.org', help_text='Domain to use for local email accounts.', max_length=32),
        ),
        migrations.AlterField(
            model_name='radiusattribute',
            name='attribute',
            field=models.CharField(help_text='See https://freeradius.org/rfc/attributes.html.', max_length=255, verbose_name='attribute'),
        ),
        migrations.AlterField(
            model_name='radiusattribute',
            name='comment',
            field=models.TextField(blank=True, default='', help_text='Use this field to document this attribute.', verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='radiusattribute',
            name='value',
            field=models.CharField(max_length=255, verbose_name='value'),
        ),
        migrations.AlterField(
            model_name='radiuskey',
            name='comment',
            field=models.CharField(blank=True, help_text='Comment for this key.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='radiuskey',
            name='default_switch',
            field=models.BooleanField(default=False, help_text='Default key for switches.'),
        ),
        migrations.AlterField(
            model_name='radiuskey',
            name='radius_key',
            field=re2o.aes_field.AESEncryptedField(help_text='RADIUS key.', max_length=255),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='banned',
            field=models.CharField(choices=[('REJECT', 'Reject the machine'), ('SET_VLAN', 'Place the machine on the VLAN')], default='REJECT', max_length=32, verbose_name='policy for banned users'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='banned_attributes',
            field=models.ManyToManyField(blank=True, help_text='Answer attributes for banned users.', related_name='banned_attribute', to='preferences.RadiusAttribute', verbose_name='banned users attributes'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='banned_vlan',
            field=models.ForeignKey(blank=True, help_text='VLAN for banned users if not rejected.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='banned_vlan', to='machines.Vlan', verbose_name='banned users VLAN'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='non_member',
            field=models.CharField(choices=[('REJECT', 'Reject the machine'), ('SET_VLAN', 'Place the machine on the VLAN')], default='REJECT', max_length=32, verbose_name='policy for non members'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='non_member_attributes',
            field=models.ManyToManyField(blank=True, help_text='Answer attributes for non members.', related_name='non_member_attribute', to='preferences.RadiusAttribute', verbose_name='non members attributes'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='non_member_vlan',
            field=models.ForeignKey(blank=True, help_text='VLAN for non members if not rejected.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='non_member_vlan', to='machines.Vlan', verbose_name='non members VLAN'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='ok_attributes',
            field=models.ManyToManyField(blank=True, help_text='Answer attributes for accepted users.', related_name='ok_attribute', to='preferences.RadiusAttribute', verbose_name='accepted users attributes'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='radius_general_policy',
            field=models.CharField(choices=[('MACHINE', "On the IP range's VLAN of the machine"), ('DEFINED', 'Preset in "VLAN for machines accepted by RADIUS"')], default='DEFINED', max_length=32),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='unknown_machine',
            field=models.CharField(choices=[('REJECT', 'Reject the machine'), ('SET_VLAN', 'Place the machine on the VLAN')], default='REJECT', max_length=32, verbose_name='policy for unknown machines'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='unknown_machine_attributes',
            field=models.ManyToManyField(blank=True, help_text='Answer attributes for unknown machines.', related_name='unknown_machine_attribute', to='preferences.RadiusAttribute', verbose_name='unknown machines attributes'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='unknown_machine_vlan',
            field=models.ForeignKey(blank=True, help_text='VLAN for unknown machines if not rejected.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='unknown_machine_vlan', to='machines.Vlan', verbose_name='unknown machines VLAN'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='unknown_port',
            field=models.CharField(choices=[('REJECT', 'Reject the machine'), ('SET_VLAN', 'Place the machine on the VLAN')], default='REJECT', max_length=32, verbose_name='policy for unknown ports'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='unknown_port_attributes',
            field=models.ManyToManyField(blank=True, help_text='Answer attributes for unknown ports.', related_name='unknown_port_attribute', to='preferences.RadiusAttribute', verbose_name='unknown ports attributes'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='unknown_port_vlan',
            field=models.ForeignKey(blank=True, help_text='VLAN for unknown ports if not rejected.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='unknown_port_vlan', to='machines.Vlan', verbose_name='unknown ports VLAN'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='unknown_room_attributes',
            field=models.ManyToManyField(blank=True, help_text='Answer attributes for unknown rooms.', related_name='unknown_room_attribute', to='preferences.RadiusAttribute', verbose_name='unknown rooms attributes'),
        ),
        migrations.AlterField(
            model_name='radiusoption',
            name='unknown_room_vlan',
            field=models.ForeignKey(blank=True, help_text='VLAN for unknown rooms if not rejected.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='unknown_room_vlan', to='machines.Vlan', verbose_name='unknown rooms VLAN'),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='days',
            field=models.IntegerField(default=7, help_text="Delay between the email and the membership's end.", unique=True),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='message',
            field=models.TextField(blank=True, default='', help_text='Message displayed specifically for this reminder.', null=True),
        ),
        migrations.AlterField(
            model_name='switchmanagementcred',
            name='default_switch',
            field=models.BooleanField(default=True, help_text='Default credentials for switches.', unique=True),
        ),
        migrations.AlterField(
            model_name='switchmanagementcred',
            name='management_id',
            field=models.CharField(help_text='Switch login.', max_length=63),
        ),
        migrations.AlterField(
            model_name='switchmanagementcred',
            name='management_pass',
            field=re2o.aes_field.AESEncryptedField(help_text='Password.', max_length=63),
        ),
    ]
